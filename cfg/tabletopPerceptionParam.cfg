#!/usr/bin/env python
PACKAGE = "interact_perception"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

### Parameters:
#name - a string which specifies the name under which this parameter should be stored
# type - defines the type of value stored, and can be any of int_t, double_t, str_t, or bool_t
# level - A bitmask which will later be passed to the dynamic reconfigure callback.
#         When the callback is called all of the level values for parameters that have been
#         changed are ORed together and the resulting value is passed to the callback.
# description - string which describes the parameter
# default - specifies the default value
# min - specifies the min value (optional and does not apply to strings and bools)
# max - specifies the max value (optional and does not apply to strings and bools) 

gen.add("paramPlaneDistThresh",    double_t,    0, "RANSAC plane distance thresh in m", 0.02,  0, 1)
gen.add("paramSetPlaneExtractNeg", bool_t, 0, "Should the plane be removed? (or everything else)",    True)
gen.add("paramStatisticFilterMeanK",    int_t,    0, "Statistical filter mean K", 50, 1, 500)
gen.add("paramStddevMulThresh",   double_t,   0, "statistical filter cuttoff - mult of std dev",  1, 0, 20)
gen.add("paramVoxelDownSampleLeafSize",   double_t,   0, "Voxel grid downsample leaf size in m", 0.005, 0, .1)



gen.add("paramXMaskMin",   double_t,   0, "X Lower bound for inclusive mask", -1.32, -2, 2)
gen.add("paramXMaskMax",   double_t,   0, "X Lower bound for inclusive mask", 0.3, -2, 2)

gen.add("paramYMaskMin",   double_t,   0, "X Lower bound for inclusive mask", -0.3, -2, 2)
gen.add("paramYMaskMax",   double_t,   0, "X Lower bound for inclusive mask", 0.5, -2, 2)

gen.add("paramZMaskMin",   double_t,   0, "X Lower bound for inclusive mask", -2, -2, 2)
gen.add("paramZMaskMax",   double_t,   0, "X Lower bound for inclusive mask", 2, -2, 2)



exit(gen.generate(PACKAGE, "interact_perception", "tabletopPerceptionParam"))